# Generated by Django 3.1.7 on 2022-02-26 09:02

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Enter the about page of the fest here')),
                ('logo', models.ImageField(blank=True, upload_to='')),
                ('identifier', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Arena',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Enter the description of the attraction here')),
                ('logo', models.ImageField(blank=True, upload_to='arena/')),
                ('url', models.CharField(blank=True, help_text='URL of Arena item', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=50)),
                ('question', models.CharField(max_length=100)),
                ('answer', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='IndustrialVisits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('subheading', models.CharField(blank=True, max_length=500, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='industrial_images/')),
                ('video_link', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MajorAttractions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('description', models.TextField(help_text='Enter the description of the attraction here')),
                ('image', models.ImageField(blank=True, upload_to='mjr_attrs/')),
                ('url', models.CharField(blank=True, help_text='URL of major attractions', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='SocialInitiatives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('date_time', models.DateTimeField(null=True)),
                ('webinar_link', models.CharField(blank=True, max_length=1024, null=True)),
                ('app_link', models.CharField(blank=True, max_length=1024, null=True)),
                ('poster', models.ImageField(blank=True, null=True, upload_to='social_images/')),
                ('video_link', models.CharField(blank=True, max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, upload_to='sponsors/')),
                ('url', models.EmailField(blank=True, help_text='URL of the sponsor', max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='TeamCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter name of the team category here', max_length=100)),
                ('teamId', models.CharField(help_text='Enter category ID', max_length=50, unique=True)),
                ('team_image', models.ImageField(blank=True, upload_to='team_images/')),
            ],
        ),
        migrations.CreateModel(
            name='TechmelaProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Title here', max_length=30)),
                ('team_name', models.CharField(max_length=20)),
                ('description', models.TextField(default='Description here')),
                ('pdf_link', models.URLField(default='https://drive.google.com/file/d/0B1HXnM1lBuoqMzVhZjcwNTAtZWI5OS00ZDg3LWEyMzktNzZmYWY2Y2NhNWQx/preview')),
                ('video_link', models.URLField(default='https://drive.google.com/file/d/1KFFhLqRLhdF27KwVVe0npoVX0lNLPhpM/preview')),
                ('domain', models.CharField(choices=[('Robotics', 'Robotics'), ('Assistive Technology', 'Assistive Technology'), ('Software Projects', 'Software Projects')], default='Robotics', max_length=30)),
                ('project_image', models.ImageField(blank=True, null=True, upload_to='techmela_projects/')),
            ],
        ),
        migrations.CreateModel(
            name='Timeline',
            fields=[
                ('day_number', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=20)),
                ('body', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='day_img/')),
            ],
        ),
        migrations.CreateModel(
            name='Workshops',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshopName', models.CharField(help_text='Enter name of workshop', max_length=100, unique=True)),
                ('workshopId', models.CharField(help_text='Enter the ID of the workshop', max_length=50)),
                ('logo', models.ImageField(blank=True, upload_to='workshop_images/')),
                ('description', models.TextField(help_text='Enter short description of the workshop')),
                ('date_time', models.DateTimeField()),
                ('venue', models.CharField(max_length=50)),
                ('contact', models.CharField(max_length=50)),
                ('registration_open', models.BooleanField(default=True)),
                ('registration_link', models.CharField(blank=True, help_text='Enter the registration link here', max_length=1024)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the member here', max_length=50)),
                ('position', models.CharField(blank=True, help_text='Enter the position of the person', max_length=50)),
                ('profile_img', models.ImageField(blank=True, upload_to='members/')),
                ('choice', models.CharField(choices=[('GLUG', "GNU/Linux Users' Group"), ('CCA', 'Centre for Cognitive Activities'), ('SAE', 'SAE'), ('MNTC', 'Maths n Tech Club'), ('REC', 'RECursion')], default='GLUG', max_length=5)),
                ('team', models.ManyToManyField(to='flow.TeamCategory')),
            ],
        ),
        migrations.CreateModel(
            name='SocialInitiativesPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='social_images/')),
                ('social_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='socialImages', to='flow.socialinitiatives')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mark', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('feas', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('tech', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flow.techmelaproject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventName', models.CharField(help_text='Enter the name of the event', max_length=50, unique=True)),
                ('eventId', models.CharField(help_text='Enter the ID of the event', max_length=50)),
                ('logo', models.ImageField(blank=True, upload_to='event_images/')),
                ('description', models.TextField(help_text='Enter short description of the event')),
                ('date_time', models.DateTimeField()),
                ('venue', models.CharField(blank=True, max_length=50)),
                ('registration_link', models.CharField(blank=True, help_text='Enter the registration link here', max_length=1024)),
                ('event_link', models.CharField(blank=True, help_text='If there is no registration, then website link', max_length=1024)),
                ('eventDay', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='flow.timeline')),
            ],
        ),
    ]
